name: "CI Workflow"

on:
  pull_request:
    branches:
      - "main"
      - "develop"
  push:
    branches:
      - "main"
      - "develop"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub packages
        run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull images
        run: |
          docker-compose -f docker-compose.yml -p buildadoc-dev up -d --build buildadoc-dev

      - name: Run psalm
        run: |
          docker-compose -f docker-compose.yml -p buildadoc-dev exec -T buildadoc-dev sh -c "scripts/analysis/psalm.sh"
          exit_code=$?
          echo "Psalm analysis exit code: $exit_code"
          if [ "$exit_code" -eq 0 ]; then
            echo "Psalm analysis successful"
          else
            echo "Psalm analysis failed with exit code $exit_code"
            exit $exit_code 
          fi

      - name: Run cs-fixer
        run: |
          docker-compose -f docker-compose.yml -p buildadoc-dev exec -it buildadoc-dev ./scripts/analysis/csfixer.sh dry-run

      - name: Run codesniffer
        run: |
          docker-compose -f docker-compose.yml -p buildadoc-dev exec -it buildadoc-dev ./scripts/analysis/phpcs

      - name: Run unit tests and generate code coverage
        run: |
          docker-compose -f docker-compose.yml -p buildadoc-dev exec -it buildadoc-dev ./scripts/test/phpunit.sh coverage

      - name: Run mutation tests with msi score
        run: |
          docker-compose -f docker-compose.yml -p buildadoc-dev exec -it buildadoc-dev ./scripts/test/infectionPHP.sh

      - name: Check if Code Coverage and Mutation Score improved
        run: |
          # Get the previous coverage and mutation score
          previous_coverage=$(cat previous_coverage.txt)
          previous_mutation_score=$(cat previous_mutation_score.txt)

          # Get the current coverage and mutation score
          current_coverage=$(grep lines-total coverage.xml | sed -E 's/.*>([0-9]+)%<.*/\1/')
          current_mutation_score=$(grep 'MSI for the codebase is' infection-log.txt | sed -E 's/.*is ([0-9]+)%/\1/')

          # Check if coverage or mutation score got worse
          if [ $current_coverage -lt $previous_coverage ] || [ $current_mutation_score -lt $previous_mutation_score ]; then
            echo "Code coverage or mutation score got worse."
            exit 1
          fi

      - name: Save Current Code Coverage and Mutation Score
        run: |
          # Save the current coverage and mutation score for the next run
          grep lines-total coverage.xml | sed -E 's/.*>([0-9]+)%<.*/\1/' > previous_coverage.txt
          grep 'MSI for the codebase is' infection-log.txt | sed -E 's/.*is ([0-9]+)%/\1/' > previous_mutation_score.txt

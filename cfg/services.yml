parameters:
  tag: 'param'
  dataPath: 'src'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true
  Command\:
    resource: '../src/Command/*'
  Generator\:
    resource: '../src/Generator/*'
  Service\:
    resource: '../src/Service/*'
  Exception\:
    resource: '../src/Exception/*'
  Dto\:
    resource: '../src/Dto/*'
  Collection\:
    resource: '../src/Collection/*'
  Formatter\:
    resource: '../src/Formatter/*'
  Contract\:
    resource: '../src/Contract/*'
  Pipeline\:
    resource: '../src/Pipeline/*'
  Service\Class\Filter\TagFilter:
    arguments:
      $tag: "%tag%"
  Service\File\Filter\FileNameFilter:
    arguments:
      $fileName: File $file
  Service\Class\Filter\ClassNameFilter:
    arguments:
      $className: ClassDto $class
  Service\Class\Filter\ParentClassNameFilter:
    arguments:
      $parentClassName: ClassDto $class
  Service\Class\Filter\PageTitleFilter:
    arguments:
      $title: DocPage $page
  Service\Class\Filter\MethodNameFilter:
    arguments:
      $name: Method $method
  Service\Class\Filter\ModifierFilter:
    arguments:
      $modifiers: []
  Pipeline\Page\Provider\ClassPageFetcherProvider:
    arguments:
      $fetchers:
        heading: 'Pipeline\Page\Fetcher\Class\HeadingFetcher',
        classPath: 'Pipeline\Page\Fetcher\Class\ClassPathFetcher',
        constantList: 'Pipeline\Page\Fetcher\Class\ConstantListFetcher',
        constructor: 'Pipeline\Page\Fetcher\Class\ConstructorFetcher',
        filesTable: 'Pipeline\Page\Fetcher\Class\FilesTableFetcher',
        interfacesList: 'Pipeline\Page\Fetcher\Class\InterfacesListFetcher',
        methodList: 'Pipeline\Page\Fetcher\Class\MethodListFetcher',
        propertiesList: 'Pipeline\Page\Fetcher\Class\PropertiesListFetcher'
  Pipeline\Page\Provider\MethodPageFetcherProvider:
    arguments:
      $fetchers:
        methodHeading: 'Pipeline\Page\Fetcher\Method\MethodHeadingFetcher',
        methodTable: 'Pipeline\Page\Fetcher\Method\MethodTableFetcher',
        methodSignature: 'Pipeline\Page\Fetcher\Method\MethodSignatureFetcher'
  Service\File\Template\Provider\TemplateServiceProvider:
    arguments:
      $services:
        method: 'Service\File\Template\MethodPageTemplateService',
        class: 'Service\File\Template\ClassPageTemplateService'
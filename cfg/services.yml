parameters:
  tag: 'param'
  dataPath: 'src'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true
  Command\:
    resource: '../src/Command/*'
  Generator\:
    resource: '../src/Generator/*'
  Service\:
    resource: '../src/Service/*'
  Exception\:
    resource: '../src/Exception/*'
  Dto\:
    resource: '../src/Dto/*'
  Formatter\:
    resource: '../src/Formatter/*'
  Contract\:
    resource: '../src/Contract/*'
  Pipeline\:
    resource: '../src/Pipeline/*'
  Service\Class\Filter\TagFilter:
    arguments:
      $tag: "%tag%"
  Service\File\Filter\FileNameFilter:
    arguments:
      $fileName: File $file
  Service\Class\Filter\ClassNameFilter:
    arguments:
      $className: ClassDto $class
  Service\Class\Filter\ParentClassNameFilter:
    arguments:
      $parentClassName: ClassDto $class
  Service\Class\Filter\PageTitleFilter:
    arguments:
      $title: DocPage $page
  Service\Class\Filter\MethodNameFilter:
    arguments:
      $name: Method $method
  Service\Class\Filter\ModifierFilter:
    arguments:
      $modifiers: []
  Service\File\Filter\MarkerNameFilter:
    arguments:
      $name: 'MARKER'
  Pipeline\Page\ClassPageMarkerPipeline:
    arguments:
      $fetcherProvider: '@Pipeline\Page\Provider\ClassPageFetcherProvider'
      $pipeline: '@Illuminate\Pipeline\Pipeline'
  Pipeline\Page\MethodPageMarkerPipeline:
    arguments:
      $fetcherProvider: '@Pipeline\Page\Provider\MethodPageFetcherProvider'
      $pipeline: '@Illuminate\Pipeline\Pipeline'
  Contract\Pipeline\MethodPageMarkerPipelineInterface:
    alias: Pipeline\Page\MethodPageMarkerPipeline
  Contract\Service\File\FileServiceInterface:
    alias: Service\File\FileService
  Contract\Service\File\DocFileServiceInterface:
    alias: Service\File\DocFileService
  Contract\Service\Class\Documentation\Page\ClassPageServiceInterface:
    alias: Service\Class\Documentation\Page\ClassPageService
  Adapter\Container\SymfonyToLaravelContainerAdapter:
    arguments:
      - '@service_container'
  Illuminate\Pipeline\Pipeline:
    class: Illuminate\Pipeline\Pipeline
    arguments:
      - '@Adapter\Container\SymfonyToLaravelContainerAdapter'
  Symfony\Component\Filesystem\Filesystem: ~
  Contract\Service\Class\Data\ClassDataServiceInterface:
    alias: Service\Class\Data\ClassDataService
  Pipeline\Page\Provider\ClassPageFetcherProvider:
    arguments:
      $fetchers:
        heading: '@Pipeline\Page\Fetcher\Class\HeadingFetcher'
        classPath: '@Pipeline\Page\Fetcher\Class\ClassPathFetcher'
        constantList: '@Pipeline\Page\Fetcher\Class\ConstantListFetcher'
        constructor: '@Pipeline\Page\Fetcher\Class\ConstructorFetcher'
        filesTable: '@Pipeline\Page\Fetcher\Class\FilesTableFetcher'
        interfacesList: '@Pipeline\Page\Fetcher\Class\InterfacesListFetcher'
        methodList: '@Pipeline\Page\Fetcher\Class\MethodListFetcher'
        propertiesList: '@Pipeline\Page\Fetcher\Class\PropertiesListFetcher'
  Pipeline\Page\Provider\MethodPageFetcherProvider:
    arguments:
      $fetchers:
        methodHeading: '@Pipeline\Page\Fetcher\Method\MethodHeadingFetcher'
        methodTable: '@Pipeline\Page\Fetcher\Method\MethodTableFetcher'
        methodSignature: '@Pipeline\Page\Fetcher\Method\MethodSignatureFetcher'
  Service\File\Template\Provider\TemplateServiceProvider:
    arguments:
      $services:
        method: '@Service\File\Template\MethodPageTemplateService'
        class: '@Service\File\Template\ClassPageTemplateService'